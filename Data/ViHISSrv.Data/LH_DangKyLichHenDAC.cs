//====================================================================================================
// Base code generated with Momentum: DAC Gen (Build 2.5.5044.27856)
// Layered Architecture Solution Guidance (http://layerguidance.codeplex.com)
//
// Generated by ThienLoi at KHANHND-LAPTOP on 08/28/2014 11:03:35 
//====================================================================================================

using log4net;
using Microsoft.Practices.EnterpriseLibrary.Data;
using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.Common;
using System.Reflection;
using ViHISSrv.Entities;
namespace ViHISSrv.Data
{

    public partial class LH_DangKyLichHenDAC : DataAccessComponent
    {

        private string _ProcedureName = "usp_LH_DangKyLichHen";
        public Int32 DagKyLichHen_Insert(LH_DangKyLichHen obj)
        {
            Int32 iResult = Int32.MinValue;
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "DagKyLichHen_Insert");
                    db.AddOutParameter(cmd, "@DangKyLichHen_Id", DbType.Int32, obj.DangKyLichHen_Id);
                    db.AddInParameter(cmd, "@MaLichHen", DbType.String, obj.MaLichHen);
                    db.AddInParameter(cmd, "@TenBenhNhan", DbType.String, obj.TenBenhNhan);
                    db.AddInParameter(cmd, "@NgaySinh", DbType.DateTime, obj.NgaySinh);
                    db.AddInParameter(cmd, "@GioiTinh", DbType.String, obj.GioiTinh);
                    db.AddInParameter(cmd, "@NgheNghiep_Id", DbType.Int32, obj.NgheNghiep_Id);
                    db.AddInParameter(cmd, "@NgheNghiep", DbType.String, obj.NgheNghiep);
                    db.AddInParameter(cmd, "@SoDienThoai", DbType.String, obj.SoDienThoai);
                    db.AddInParameter(cmd, "@Email", DbType.String, obj.Email);
                    db.AddInParameter(cmd, "@SoNha", DbType.String, obj.SoNha);
                    db.AddInParameter(cmd, "@TinhThanh_Id", DbType.Int32, obj.TinhThanh_Id);
                    db.AddInParameter(cmd, "@QuanHuyen_Id", DbType.Int32, obj.QuanHuyen_Id);
                    db.AddInParameter(cmd, "@XaPhuong_Id", DbType.Int32, obj.XaPhuong_Id);
                    db.AddInParameter(cmd, "@DiaChi", DbType.String, obj.DiaChi);
                    db.AddInParameter(cmd, "@IsBHYT", DbType.Boolean, obj.IsBHYT);
                    db.AddInParameter(cmd, "@IsKhongBHYT", DbType.Boolean, obj.IsKhongBHYT);
                    db.AddInParameter(cmd, "@IsDichVu", DbType.Boolean, obj.IsDichVu);
                    db.AddInParameter(cmd, "@IsBanThan", DbType.Boolean, obj.IsBanThan);
                    db.AddInParameter(cmd, "@IsNguoiThan", DbType.Boolean, obj.IsNguoiThan);
                    db.AddInParameter(cmd, "@LoaiDatLichHen", DbType.Int32, obj.LoaiDatLichHen);
                    db.AddInParameter(cmd, "@NgayHen", DbType.Date, obj.NgayHen);
                    db.AddInParameter(cmd, "@BacSi_Id", DbType.Int32, obj.BacSi_Id);
                    db.AddInParameter(cmd, "@TenBacSi", DbType.String, obj.TenBacSi);
                    db.AddInParameter(cmd, "@ChuyenKhoa_Id", DbType.Int32, obj.ChuyenKhoa_Id);
                    db.AddInParameter(cmd, "@ChuyenKhoa", DbType.String, obj.ChuyenKhoa);
                    db.AddInParameter(cmd, "@PhongKham_Id", DbType.Int32, obj.PhongKham_Id);
                    db.AddInParameter(cmd, "@LichLamViecChiTiet_Id", DbType.Int32, obj.LichLamViecChiTiet_Id);
                    db.AddInParameter(cmd, "@ThoiGianBatDau", DbType.Time, obj.ThoiGianBatDau);
                    db.AddInParameter(cmd, "@ThoiGianKetThuc", DbType.Time, obj.@ThoiGianKetThuc);
                    db.AddInParameter(cmd, "@IsXacNhan", DbType.Boolean, obj.IsXacNhan);
                    db.AddInParameter(cmd, "@NguoiXacNhan_Id", DbType.Int32, obj.NguoiXacNhan_Id);
                    db.AddInParameter(cmd, "@ThoiGianXacNhan", DbType.DateTime, obj.ThoiGianXacNhan);
                    db.AddInParameter(cmd, "@HIS_KhamBenh_Id", DbType.Int32, obj.HIS_KhamBenh_Id);
                    db.AddInParameter(cmd, "@CreateBy_Id", DbType.Int32, obj.CreateBy_Id);
                    db.AddInParameter(cmd, "@CreateDate", DbType.DateTime, obj.CreateDate);

                    db.ExecuteNonQuery(cmd);
                    //db.AddOutParameter(cmd, "@DangKyLichHen_Id", DbType.Int32, 20);
                    iResult =  Convert.ToInt32(cmd.Parameters["@DangKyLichHen_Id"].Value);
       
                    return iResult;
                }
            }
            catch (Exception ex)
            {
               
                return -1;
            };
        }
        public Int32 DagKyLichHen_Update(LH_DangKyLichHen obj)
        {
            Int32 iResult = Int32.MinValue;
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "DagKyLichHen_Update");
                    db.AddInParameter(cmd, "@DangKyLichHen_Id", DbType.Int32, obj.DangKyLichHen_Id);
                    db.AddInParameter(cmd, "@MaLichHen", DbType.String, obj.MaLichHen);
                    db.AddInParameter(cmd, "@TenBenhNhan", DbType.String, obj.TenBenhNhan);
                    db.AddInParameter(cmd, "@NgaySinh", DbType.DateTime, obj.NgaySinh);
                    db.AddInParameter(cmd, "@GioiTinh", DbType.String, obj.GioiTinh);
                    db.AddInParameter(cmd, "@NgheNghiep_Id", DbType.Int32, obj.NgheNghiep_Id);
                    db.AddInParameter(cmd, "@NgheNghiep", DbType.String, obj.NgheNghiep);
                    db.AddInParameter(cmd, "@SoDienThoai", DbType.String, obj.SoDienThoai);
                    db.AddInParameter(cmd, "@Email", DbType.String, obj.Email);
                    db.AddInParameter(cmd, "@SoNha", DbType.String, obj.SoNha);
                    db.AddInParameter(cmd, "@TinhThanh_Id", DbType.Int32, obj.TinhThanh_Id);
                    db.AddInParameter(cmd, "@QuanHuyen_Id", DbType.Int32, obj.QuanHuyen_Id);
                    db.AddInParameter(cmd, "@XaPhuong_Id", DbType.Int32, obj.XaPhuong_Id);
                    db.AddInParameter(cmd, "@DiaChi", DbType.String, obj.DiaChi);
                    db.AddInParameter(cmd, "@IsBHYT", DbType.Boolean, obj.IsBHYT);
                    db.AddInParameter(cmd, "@IsKhongBHYT", DbType.Boolean, obj.IsKhongBHYT);
                    db.AddInParameter(cmd, "@IsDichVu", DbType.Boolean, obj.IsDichVu);
                    db.AddInParameter(cmd, "@IsBanThan", DbType.Boolean, obj.IsBanThan);
                    db.AddInParameter(cmd, "@IsNguoiThan", DbType.Boolean, obj.IsNguoiThan);
                    db.AddInParameter(cmd, "@LoaiDatLichHen", DbType.Int32, obj.LoaiDatLichHen);
                    db.AddInParameter(cmd, "@NgayHen", DbType.Date, obj.NgayHen);
                    db.AddInParameter(cmd, "@BacSi_Id", DbType.Int32, obj.BacSi_Id);
                    db.AddInParameter(cmd, "@TenBacSi", DbType.String, obj.TenBacSi);
                    db.AddInParameter(cmd, "@ChuyenKhoa_Id", DbType.Int32, obj.ChuyenKhoa_Id);
                    db.AddInParameter(cmd, "@ChuyenKhoa", DbType.String, obj.ChuyenKhoa);
                    db.AddInParameter(cmd, "@PhongKham_Id", DbType.Int32, obj.PhongKham_Id);
                    db.AddInParameter(cmd, "@LichLamViecChiTiet_Id", DbType.Int32, obj.LichLamViecChiTiet_Id);
                    db.AddInParameter(cmd, "@ThoiGianBatDau", DbType.Time, obj.ThoiGianBatDau);
                    db.AddInParameter(cmd, "@ThoiGianKetThuc", DbType.Time, obj.@ThoiGianKetThuc);
                    db.AddInParameter(cmd, "@IsXacNhan", DbType.Boolean, obj.IsXacNhan);
                    db.AddInParameter(cmd, "@NguoiXacNhan_Id", DbType.Int32, obj.NguoiXacNhan_Id);
                    db.AddInParameter(cmd, "@ThoiGianXacNhan", DbType.DateTime, obj.ThoiGianXacNhan);
                    db.AddInParameter(cmd, "@IsHuyHen", DbType.Boolean, obj.IsHuyHen);
                    db.AddInParameter(cmd, "@NguoiHuy_Id", DbType.Int32, obj.NguoiHuy_Id);
                    db.AddInParameter(cmd, "@ThoiGianHuy", DbType.DateTime, obj.ThoiGianHuy);
                    db.AddInParameter(cmd, "@HIS_KhamBenh_Id", DbType.Int32, obj.HIS_KhamBenh_Id);
                    db.AddInParameter(cmd, "@CreateBy_Id", DbType.Int32, obj.CreateBy_Id);
                    db.AddInParameter(cmd, "@CreateDate", DbType.DateTime, obj.CreateDate);
                    db.AddInParameter(cmd, "@UpdateBy_Id", DbType.Int32, obj.UpdateBy_Id);
                    db.AddInParameter(cmd, "@UpdateDate", DbType.DateTime, obj.UpdateDate);

  
                    iResult = db.ExecuteNonQuery(cmd);

                    return iResult;
                }
            }
            catch (Exception ex)
            {

                return -1;
            };
        }
        public Int32 XacNhanLichHen(Int32 DangKyLienHen_Id,Int32 NguoiXacNhan_id)
        {
            Int32 iresult = Int32.MinValue;
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "XacNhanLichHen");
                    db.AddInParameter(cmd, "@DangKyLichHen_Id", DbType.Int32, DangKyLienHen_Id);
                    db.AddInParameter(cmd, "@NguoiXacNhan_Id", DbType.Int32, NguoiXacNhan_id);
                    iresult =  db.ExecuteNonQuery(cmd);
                    return iresult;
                }
            }
            catch (Exception ex)
            {
                return -1;
            }
        }

        public Int32 UpdateMaLichHen(Int32 DangKyLienHen_Id, DateTime NgayKham)
        {
            Int32 iresult = Int32.MinValue;
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "UpdateMaLichHen");
                    db.AddInParameter(cmd, "@DangKyLichHen_Id", DbType.Int32, DangKyLienHen_Id);
                    db.AddInParameter(cmd, "@NgayHen", DbType.Date, NgayKham);
                    iresult = db.ExecuteNonQuery(cmd);
                    return iresult;
                }
            }
            catch (Exception ex)
            {
                return -1;
            }
        }

        public Int32 HuyHen(Int32 DangKyLienHen_Id, Int32 NguoiHuy_Id)
        {
            Int32 iresult = Int32.MinValue;
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "HuyHen");
                    db.AddInParameter(cmd, "@DangKyLichHen_Id", DbType.Int32, DangKyLienHen_Id);
                    db.AddInParameter(cmd, "@NguoiHuy_Id", DbType.Int32, NguoiHuy_Id);
                    iresult = db.ExecuteNonQuery(cmd);
                    return iresult;
                }
            }
            catch (Exception ex)
            {
                return -1;
            }
        }

        public DataTable GetLichHen_By_UserId_TuNgay_DenNgay(string SDT, string Email, DateTime TuNgay, DateTime DenNgay, int PageNum, int PageSize)
        {
            DataTable dt = new DataTable();
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "GetLichHen_By_UserId_TuNgay_DenNgay");
                    db.AddInParameter(cmd, "@SoDienThoai", DbType.String, SDT);
                    db.AddInParameter(cmd, "@Email", DbType.String, Email);
                    db.AddInParameter(cmd, "@CreateDate", DbType.DateTime, TuNgay);
                    db.AddInParameter(cmd, "@UpdateDate", DbType.DateTime, DenNgay);
                    db.AddInParameter(cmd, "@PageNum", DbType.Int32, PageNum);
                    db.AddInParameter(cmd, "@PageSize", DbType.Int32, PageSize);
                    DataSet ds = new DataSet();
                    ds = db.ExecuteDataSet(cmd);
                    if (ds != null && ds.Tables.Count > 0)
                    {
                        dt = ds.Tables[0];
                    }
                }
            }
            catch (Exception ex)
            {
                return null;
            }
            return dt;
        }

        public DataTable GetLichHen_By_DangKyLichHen_Id(int DangKyLichHen_Id)
        {
            DataTable dt = new DataTable();
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "GetLichHen_By_DangKyLichHen_Id");
                    db.AddInParameter(cmd, "@DangKyLichHen_Id", DbType.Int32, DangKyLichHen_Id);
                    DataSet ds = new DataSet();
                    ds = db.ExecuteDataSet(cmd);
                    if (ds != null && ds.Tables.Count > 0)
                    {
                        dt = ds.Tables[0];
                    }
                }
            }
            catch (Exception ex)
            {
                return null;
            }
            return dt;
        }


        public DataTable GetLichHen_By_UserId_TrangThai_TuNgay_DenNgay_HoTen_SDT(/*Int32 ChuyenKhoa_Id,*/Int32 UserId, DateTime TuNgay, DateTime DenNgay, int TrangThai, string TenBenhNhan, string SDT)
        {
            DataTable dt = new DataTable();
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "GetLichHen_By_UserId_TrangThai_TuNgay_DenNgay_HoTen_SDT");
                    //db.AddInParameter(cmd, "@ChuyenKhoa_Id", DbType.Int32, ChuyenKhoa_Id);
                    db.AddInParameter(cmd, "@BacSi_Id", DbType.Int32, UserId);
                    db.AddInParameter(cmd, "@CreateDate", DbType.DateTime, TuNgay);
                    db.AddInParameter(cmd, "@UpdateDate", DbType.DateTime, DenNgay);
                    db.AddInParameter(cmd, "@NgheNghiep_Id", DbType.Int32, TrangThai);
                    db.AddInParameter(cmd, "@TenBenhNhan", DbType.String, TenBenhNhan);
                    db.AddInParameter(cmd, "@SoDienThoai", DbType.String, SDT);
                    DataSet ds = new DataSet();
                    ds = db.ExecuteDataSet(cmd);
                    if (ds != null && ds.Tables.Count > 0)
                    {
                        dt = ds.Tables[0];
                    }
                }
            }
            catch (Exception ex)
            {
                return null;
            }
            return dt;
        }

        public DataTable GetLichHen_By_SDT(string SDT)
        {
            DataTable dt = new DataTable();
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "GetLichHen_By_SDT");
                    db.AddInParameter(cmd, "@SoDienThoai", DbType.String, SDT);
                    DataSet ds = new DataSet();
                    ds = db.ExecuteDataSet(cmd);
                    if (ds != null && ds.Tables.Count > 0)
                    {
                        dt = ds.Tables[0];
                    }
                }
            }
            catch (Exception ex)
            {
                return null;
            }
            return dt;
        }

        public DataTable Search_LichHen(DateTime TuNgay, DateTime DenNgay, int TrangThai, string MaLichHen, string HoTen, int ChuyenKhoa_Id, int BacSi_Id, int PageNum, int PageSize)
        {
            DataTable dt = new DataTable();
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "Search_LichHen");
                    db.AddInParameter(cmd, "@CreateDate", DbType.Date, TuNgay);
                    db.AddInParameter(cmd, "@UpdateDate", DbType.Date, DenNgay);
                    db.AddInParameter(cmd, "@NgheNghiep_Id", DbType.Int32, TrangThai);
                    db.AddInParameter(cmd, "@MaLichHen", DbType.String, MaLichHen);
                    db.AddInParameter(cmd, "@TenBenhNhan", DbType.String, HoTen);
                    db.AddInParameter(cmd, "@ChuyenKhoa_Id", DbType.Int32, ChuyenKhoa_Id);
                    db.AddInParameter(cmd, "@BacSi_Id", DbType.Int32, BacSi_Id);
                    db.AddInParameter(cmd, "@PageNum", DbType.Int32, PageNum);
                    db.AddInParameter(cmd, "@PageSize", DbType.Int32, PageSize);
                    DataSet ds = new DataSet();
                    ds = db.ExecuteDataSet(cmd);
                    if (ds != null && ds.Tables.Count > 0)
                    {
                        dt = ds.Tables[0];
                    }
                }
            }
            catch (Exception ex)
            {
                return null;
            }
            return dt;
        }

        public DataTable Export_DSBenhNhan(DateTime TuNgay, DateTime DenNgay, int TrangThai, string MaLichHen, string HoTen, int ChuyenKhoa_Id, int BacSi_Id)
        {
            DataTable dt = new DataTable();
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "Export_DSBenhNhan");
                    db.AddInParameter(cmd, "@CreateDate", DbType.Date, TuNgay);
                    db.AddInParameter(cmd, "@UpdateDate", DbType.Date, DenNgay);
                    db.AddInParameter(cmd, "@NgheNghiep_Id", DbType.Int32, TrangThai);
                    db.AddInParameter(cmd, "@MaLichHen", DbType.String, MaLichHen);
                    db.AddInParameter(cmd, "@TenBenhNhan", DbType.String, HoTen);
                    db.AddInParameter(cmd, "@ChuyenKhoa_Id", DbType.Int32, ChuyenKhoa_Id);
                    db.AddInParameter(cmd, "@BacSi_Id", DbType.Int32, BacSi_Id);
                    DataSet ds = new DataSet();
                    ds = db.ExecuteDataSet(cmd);
                    if (ds != null && ds.Tables.Count > 0)
                    {
                        dt = ds.Tables[0];
                    }
                }
            }
            catch (Exception ex)
            {
                return null;
            }
            return dt;
        }
        //
        public DataTable GetLichHen_By_MaLichHen(string MaLichHen)
        {
            DataTable dt = new DataTable();
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "GetLichHen_By_MaLichHen");
                    db.AddInParameter(cmd, "@MaLichHen", DbType.String, MaLichHen);
                    DataSet ds = new DataSet();
                    ds = db.ExecuteDataSet(cmd);
                    if (ds != null && ds.Tables.Count > 0)
                    {
                        dt = ds.Tables[0];
                    }
                }
            }
            catch (Exception ex)
            {
                return null;
            }
            return dt;
        }
        //
        public DataTable DanhSachBenhNhanHenTrongNgay()
        {
            DataTable dt = new DataTable();
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "DanhSachBenhNhanHenTrongNgay");
                    DataSet ds = new DataSet();
                    ds = db.ExecuteDataSet(cmd);
                    if (ds != null && ds.Tables.Count > 0)
                    {
                        dt = ds.Tables[0];
                    }
                }
            }
            catch (Exception ex)
            {
                return null;
            }
            return dt;
        }
        public Int32 HIS_DT_KhamBenh_Update_TrangThaiLichHen(Int32 TrangThai_Id, Int32 HIS_KhamBenh_Id)
        {
            Int32 iresult = Int32.MinValue;
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "HIS_DT_KhamBenh_Update_TrangThaiLichHen");
                    db.AddInParameter(cmd, "@NgheNghiep_Id", DbType.Int32, TrangThai_Id);
                    db.AddInParameter(cmd, "@HIS_KhamBenh_Id", DbType.Int32, HIS_KhamBenh_Id);
                    iresult = db.ExecuteNonQuery(cmd);
                    return iresult;
                }
            }
            catch (Exception ex)
            {
                return -1;
            }
        }

        public DataTable CheckDatLich(DateTime TGBD, DateTime TGKT, DateTime NgayHen, int ChuyenKhoa_Id,int DangKyLichHen_Id)
        {
            DataTable dt = new DataTable();
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "CheckDatLich");
                    db.AddInParameter(cmd, "@ThoiGianBatDau", DbType.Time, TGBD);
                    db.AddInParameter(cmd, "@ThoiGianKetThuc", DbType.Time, TGKT);
                    db.AddInParameter(cmd, "@NgayHen", DbType.DateTime, NgayHen);
                    db.AddInParameter(cmd, "@ChuyenKhoa_Id", DbType.Int32, ChuyenKhoa_Id);
                    db.AddInParameter(cmd, "@DangKyLichHen_Id", DbType.Int32, DangKyLichHen_Id);
                    DataSet ds = new DataSet();
                    ds = db.ExecuteDataSet(cmd);
                    if (ds != null && ds.Tables.Count > 0)
                    {
                        dt = ds.Tables[0];
                    }
                }
            }
            catch (Exception ex)
            {
                return null;
            }
            return dt;
        }
        //
        public Int32 Update_SMSMDaGui(Int32 KhamBenh_Id)
        {
            Int32 iResult = Int32.MinValue;
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "Update_SMSMDaGui");
                    db.AddInParameter(cmd, "@HIS_KhamBenh_Id", DbType.Int32, KhamBenh_Id);
                    iResult = db.ExecuteNonQuery(cmd);

                    return iResult;
                }
            }
            catch (Exception ex)
            {

                return -1;
            };
        }
        //
        public DataTable Check_DaGuiSMS(string strKhamBenh_Id)
        {
            DataTable dt = new DataTable();
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "Check_DaGuiSMS");
                    db.AddInParameter(cmd, "@strParam", DbType.String, strKhamBenh_Id);
                    DataSet ds = new DataSet();
                    ds = db.ExecuteDataSet(cmd);
                    if (ds != null && ds.Tables.Count > 0)
                    {
                        dt = ds.Tables[0];
                    }
                }
            }
            catch (Exception ex)
            {
                return null;
            }
            return dt;
        }

        //
        public Int32 Update_LH_SMSMDaGui(Int32 DangKyLichHen_Id)
        {
            Int32 iResult = Int32.MinValue;
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "Update_LH_SMSMDaGui");
                    db.AddInParameter(cmd, "@DangKyLichHen_Id", DbType.Int32, DangKyLichHen_Id);
                    iResult = db.ExecuteNonQuery(cmd);

                    return iResult;
                }
            }
            catch (Exception ex)
            {

                return -1;
            };
        }
        //
        public DataTable Check_LH_DaGuiSMS(Int32 DangKyLichHen_Id)
        {
            DataTable dt = new DataTable();
            try
            {
                Database db = DatabaseFactory.CreateDatabase(ConnectionDefine.HIS_LICHHEN);
                using (DbCommand cmd = db.GetStoredProcCommand(_ProcedureName))
                {
                    db.AddInParameter(cmd, "@Action", DbType.String, "Check_LH_DaGuiSMS");
                    db.AddInParameter(cmd, "@DangKyLichHen_Id", DbType.Int32, DangKyLichHen_Id);
                    DataSet ds = new DataSet();
                    ds = db.ExecuteDataSet(cmd);
                    if (ds != null && ds.Tables.Count > 0)
                    {
                        dt = ds.Tables[0];
                    }
                }
            }
            catch (Exception ex)
            {
                return null;
            }
            return dt;
        }
    }
}

